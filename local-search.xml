<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Levenshtein Edit Distance</title>
    <link href="/2022/03/02/Levenshtein-edit-distance/"/>
    <url>/2022/03/02/Levenshtein-edit-distance/</url>
    
    <content type="html"><![CDATA[<h1 id="思考小问题">思考小问题</h1><p>我们来考虑这样一个问题：给定两个句子，判断这两个句子之间的相似度。直观来看，如果句子1和句子2之间只有几个字不同，其余字都一模一样，那这两个句子必然极为相似。换言之，如果句子1可以很容易地被修改成句子2，则说明这两个句子相似性很大。</p><blockquote><p>举例说明两个句子极为相似的情况：</p><p>s1 = "我是一只小小小小鸟，想要飞呀飞却飞也飞不高"</p><p>s2 = "我是一条小小小小狗，想要睡呀睡却睡也睡不够"</p></blockquote><h1 id="汉明距离">汉明距离</h1><p>上面的思考问题中涉及到一个核心的问题：什么是相似度。直观来看，两个句子之间的相似度和将它们修改成对方的难易度有关。如果我们可以定量评价将句子1修改成句子2的“成本”，那不是很容易能判断句子之间的相似度了吗？我们并不是最先在这个方向上思考的人，早在1950年，一位如今大名鼎鼎的科学家汉明（Hamming）在对二元信道检错及纠错码的<a href="https://ieeexplore.ieee.org/ielx7/6731005/6772728/06772729.pdf?tag=1">研究</a>[1]中提出了一种判断<span class="math inline">\(\{0, 1\}^n\)</span>空间内两个坐标距离的方法。这个空间内共有<span class="math inline">\(2^n\)</span>个点，任意一个维度中的坐标只能取0或1。对于此空间内的一个点，如果某个维度下的坐标出了错则该维度下的坐标会从0反转为1或从1反转为0。汉明基于此定义两个点<span class="math inline">\(x\)</span>和<span class="math inline">\(y\)</span>之间的距离<span class="math inline">\(D(x, y)\)</span>为n个维度中<span class="math inline">\(x\)</span>和<span class="math inline">\(y\)</span>坐标不同的数量，这也就是汉明距离。汉明距离有如下特点：</p><p><span class="math display">\[\begin{align}D(x,y) = 0 &amp;&amp; if\ and\ only\ if\ x == y \\D(x, y) = D(y, x) &gt; 0 &amp;&amp; if\ x \ne y \\D(x, y) + D(y, z) \ge D(x, z) &amp;&amp;triangle\ inequality\end{align}\]</span></p><p>我们来举例计算汉明距离：比如<span class="math inline">\(x=[0, 0, 0,1]\)</span>，<span class="math inline">\(y=[0, 0, 1, 0]\)</span>，<span class="math inline">\(x\)</span>和<span class="math inline">\(y\)</span>第2和第3个维度（维度从0开始计数）不同，那么它们之间的汉明距离就是2。</p><p>换一种视角，如果我们将<span class="math inline">\(x\)</span>和<span class="math inline">\(y\)</span>当作两个句子，我们就可以利用汉明距离去计算两个句子相互修改的难易“成本”，接下来我们统称这种“成本”为距离。但这种计算方法有其固有缺点：只能应对两个句子长度相同的情况。如果两个句子长度不同，那我们就无法利用汉明距离计算两个句子间的距离了。</p><h1 id="levenshtein距离">Levenshtein距离</h1><p>那么如何计算两个长度不同的句子之间的距离呢？基于汉明的工作，俄国科学家Levenshtein于1965年在其<a href="https://nymity.ch/sybilhunting/pdf/Levenshtein1966a.pdf">文章</a>[2]《可纠正删除、插入、反转的二进制纠错码》中提出了一种新的判断两个点<span class="math inline">\(x\)</span>和<span class="math inline">\(y\)</span>距离<span class="math inline">\(D(x,y)\)</span>的方法。这种计算方法的物理意义是每次可修改一个坐标并将<span class="math inline">\(x\)</span>修改为<span class="math inline">\(y\)</span>的最次少数，支持的修改方式有增、删、改。Levenshtein提出的评价指标如今成为了有名的Levenshtein距离，如今被广泛应用在生物信息学、自然语言处理等多个研究领域中。</p><p>显然，计算Levenshtein距离要明显比计算汉明距离困难。</p><h2 id="levenshtein距离的编程实现">Levenshtein距离的编程实现</h2><h3 id="递归实现">递归实现</h3><h3 id="递推实现">递推实现</h3><blockquote><blockquote><blockquote><p>【TODO】待更新</p></blockquote></blockquote></blockquote><hr /><h1 id="references">References：</h1><p>[1] Hamming R W . Error detecting and error correcting codes[J]. Bell Labs Technical Journal, 1950, 29(2):147-160.<br> [2] Levenshtein V I . Binary codes capable of correcting deletions, insertions and reversals[J]. Doklady Akademii Nauk SSSR, 1965, 163.<br> [3] Berger B , Waterman M S , Yu Y W . Levenshtein Distance, Sequence Comparison and Biological Database Search[J]. IEEE Transactions on Information Theory, 2020, PP(99):1-1.</p>]]></content>
    
    
    
    <tags>
      
      <tag>算法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>About the blog</title>
    <link href="/2022/03/01/about-blog/"/>
    <url>/2022/03/01/about-blog/</url>
    
    <content type="html"><![CDATA[<p>本博客基于<a href="https://hexo.io">hexo</a>框架搭建，使用主题为<a href="https://github.com/fluid-dev/hexo-theme-fluid">fluid</a>。</p><p>hexo的文档参考<a href="https://hexo.io/docs">链接</a>, fluid主题的配置文档参考<a href="https://hexo.fluid-dev.com/docs/guide/">链接</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2022/02/27/hello-world/"/>
    <url>/2022/02/27/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="quick-start">Quick Start</h2><h3 id="create-a-new-post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="run-server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="generate-static-files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="deploy-to-remote-sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>一个测试文档</title>
    <link href="/2022/02/27/%E4%B8%80%E4%B8%AA%E6%B5%8B%E8%AF%95%E6%96%87%E6%A1%A3/"/>
    <url>/2022/02/27/%E4%B8%80%E4%B8%AA%E6%B5%8B%E8%AF%95%E6%96%87%E6%A1%A3/</url>
    
    <content type="html"><![CDATA[<p>这是一个测试文档，用来测试新建一篇文章。</p><h1 id="正文">正文</h1><p class="note note-warning">Warning：内容内容内容</p><p>内容内容内容</p><p>内容内容内容</p><h1 id="一级标题">一级标题</h1><p>内容内容内容</p><p>内容内容内容</p><p>内容内容内容</p><p>内容内容内容</p><p>内容内容内容</p><h2 id="二级标题">二级标题</h2><p>内容内容内容</p><p>内容内容内容</p><p>内容内容内容</p><p>内容内容内容</p><h3 id="三级标题">三级标题</h3><p>内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容</p><p>内容内容内容</p><p>内容内容内容</p><p>内容内容内容</p><p>内容内容内容</p><h1 id="表格测试">表格测试：</h1><div data-align="center"><table><thead><tr class="header"><th>1</th><th></th><th></th></tr></thead><tbody><tr class="odd"><td></td><td>2</td><td></td></tr><tr class="even"><td></td><td></td><td>3</td></tr><tr class="odd"><td></td><td>4</td><td></td></tr></tbody></table><p>这是一个测试表格</p></div><h1 id="公式测试">公式测试：</h1><p>独行公式：</p><p><span class="math display">\[\frac{1}{\pi}\]</span> 行内公式：<span class="math inline">\(\frac{1}{2}\)</span></p><h1 id="代码测试">代码测试：</h1><figure class="highlight python"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">hello</span>():<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Hello world&quot;</span>)<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    hello()<br></code></pre></td></tr></table></figure><h1 id="图片测试">图片测试</h1><div align="center"><img src="/img/default.png" width="50%" height="50%"/> <br/>图1 这是一个测试图片<div>]]></content>
    
    
    
    <tags>
      
      <tag>测试</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
